name: Push to master and release branches
run-name: ${{ github.ref_name }} push run 🚀
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - release-test
permissions:
  contents: write
concurrency:
  group: '${{ github.workflow }} @ ${{ github.ref }}'
  cancel-in-progress: ${{ fromJSON(github.ref_type == 'tag') }}
jobs:
  check-format:
    name: Check Formatting 🔍
    uses: ./.github/workflows/check-format.yaml
    permissions:
      contents: read

  build-project:
    name: Build Project 🧱
    uses: ./.github/workflows/build-project.yaml
    secrets: inherit
    permissions:
      contents: read

  update-documentation:
    name: Update Documentation 📖
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: ./.github/actions/generate-docs
        with:
          disableLinkExtensions: true

  create-appcast:
    name: Create Sparkle Appcast 🎙️
    runs-on: macos-13
    needs: build-project
    strategy:
      fail-fast: false
      matrix:
        target: [arm64, x86_64]
    defaults:
      run:
        shell: zsh --no-rcs --errexit --pipefail {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set Up Environment 🔧
        id: setup
        run: |
          : Set Up Environment 🔧
          if (( ${+RUNNER_DEBUG} )) setopt XTRACE

          local channel='stable'
          if [[ ${GITHUB_REF_NAME} == *(beta|rc)* ]] {
            channel='beta'
          }

          local -A arch_names=(x86_64 intel arm64 apple)
          print "cpuName=${arch_names[${{ matrix.target }}]}" >> $GITHUB_OUTPUT
          print "commitHash=${GITHUB_SHA:0:9}" >> $GITHUB_OUTPUT
          print "channel=${channel}" >> $GITHUB_OUTPUT

      - name: Download Artifact 📥
        uses: actions/download-artifact@v3
        with:
          name: obs-studio-macos-${{ matrix.target }}-${{ steps.setup.outputs.commitHash }}

      - name: Generate Appcast 🎙️
        id: generate-appcast
        uses: ./.github/actions/sparkle-appcast
        with:
          sparklePrivateKey: ${{ secrets.SPARKLE_PRIVATE_KEY }}
          baseImage: ${{ github.workspace }}/obs-studio-*-macos-${{ steps.setup.outputs.cpuName }}.dmg
          channel: ${{ steps.setup.outputs.channel }}
          count: 1
          urlPrefix: 'https://cdn-fastly.obsproject.com/downloads'
          customTitle: 'OBS Studio'
          customLink: 'https://obsproject.com/'

      - name: Upload Artifacts 📡
        uses: actions/upload-artifact@v3
        with:
          name: macos-sparkle-update-${{ matrix.target }}
          path: ${{ github.workspace }}/output

  create-release:
    name: Create Release 🛫
    runs-on: ubuntu-22.04
    needs: build-project
    defaults:
      run:
        shell: bash
    steps:
      - name: Check Release Tag ☑️
        id: check
        run: |
          : Check Release Tag ☑️
          if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi
          shopt -s extglob

          case "${GITHUB_REF_NAME}" in
            +([0-9]).+([0-9]).+([0-9]) )
              echo 'validTag=true' >> $GITHUB_OUTPUT
              echo 'prerelease=false' >> $GITHUB_OUTPUT
              echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
              ;;
            +([0-9]).+([0-9]).+([0-9])-@(beta|rc)*([0-9]) )
              echo 'validTag=true' >> $GITHUB_OUTPUT
              echo 'prerelease=true' >> $GITHUB_OUTPUT
              echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
              ;;
            *) echo 'validTag=false' >> $GITHUB_OUTPUT ;;
          esac

      - name: Download Build Artifacts 📥
        uses: actions/download-artifact@v3
        if: ${{ fromJSON(steps.check.outputs.validTag) }}

      - name: Rename Files 🏷️
        if: fromJSON(steps.check.outputs.validTag)
        run: |
          : Rename Files 🏷️
          if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi

          root_dir="${PWD}"

          commit_hash="${GITHUB_SHA:0:9}"
          macos_arm64_artifact_name="obs-studio-macos-arm64-${commit_hash}"
          macos_arm64_dsym_artifact_name="obs-studio-macos-arm64-${commit_hash}-dSYMs"
          macos_intel_artifact_name="obs-studio-macos-x86_64-${commit_hash}"
          macos_intel_dsym_artifact_name="obs-studio-macos-x86_64-${commit_hash}-dSYMs"
          ubuntu_x86_64_artifact_name="obs-studio-ubuntu-22.04-x86_64-${commit_hash}"
          ubuntu_x86_64_debug_name="obs-studio-ubuntu-22.04-x86_64-${commit_hash}-dbgsym"

          echo '::group::Renaming Artifacts'
          mv -v "${macos_arm64_artifact_name}/"obs-studio-*-macos-apple.dmg \
            "${root_dir}"/OBS-Studio-${{ steps.check.outputs.version }}-macOS-Apple.dmg
          mv -v "${macos_arm64_dsym_artifact_name}/"obs-studio-*-macos-apple-dSYMs.tar.xz \
            "${root_dir}"/OBS-Studio-${{ steps.check.outputs.version }}-macOS-Apple-dSYMs.tar.xz
          mv -v "${macos_intel_artifact_name}/"obs-studio-*-macos-intel.dmg \
            "${root_dir}"/OBS-Studio-${{ steps.check.outputs.version }}-macOS-Intel.dmg
          mv -v "${macos_intel_dsym_artifact_name}/"obs-studio-*-macos-intel-dSYMs.tar.xz \
            "${root_dir}"/OBS-Studio-${{ steps.check.outputs.version }}-macOS-Intel-dSYMs.tar.xz
          mv -v "${ubuntu_x86_64_artifact_name}/"obs-studio-*-x86_64-linux-gnu.deb \
            "${root_dir}"/OBS-Studio-${{ steps.check.outputs.version }}-Ubuntu-x86_64.deb
          mv -v "${ubuntu_x86_64_debug_name}/"obs-studio-*-x86_64-linux-gnu-dbgsym.ddeb \
            "${root_dir}"/OBS-Studio-${{ steps.check.outputs.version }}-Ubuntu-x86_64-dbsym.ddeb
          echo '::endgroup::'

      - name: Generate Checksums 🪪
        if: fromJSON(steps.check.outputs.validTag)
        run: |
          : Generate Checksums 🪪
          if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi
          shopt -s extglob

          echo "### Checksums" > ${{ github.workspace }}/CHECKSUMS.txt
          for file in ${{ github.workspace }}/@(*.deb|*.ddeb|*.dmg|*.tar.xz); do
            echo "    ${file##*/}: $(sha256sum "${file}" | cut -d " " -f 1)" >> ${{ github.workspace }}/CHECKSUMS.txt
          done

          echo "$(<CHECKSUMS.txt)"

  flatpak-publish:
    name: Publish to Flathub 📦
    needs: create-release
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    env:
      FLATPAK_BUILD_PATH: flatpak_app/files/share
    container:
      image: bilelmoussaoui/flatpak-github-actions:kde-6.4
      options: --privileged
    strategy:
      matrix:
        branch: ${{ fromJSON('["beta", "stable"]') }}
    steps:
      - name: Set Up Environment 🔧
        id: setup
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          : Set Up Environment 🔧
          if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi

          git config --global --add safe.directory "${GITHUB_WORKSPACE}"

          dnf install -y -q gh
          gh extension install actions/gh-actions-cache

          cache_key='flatpak-builder-${{ hashFiles('build-aux/**/*.json') }}'
          cache_ref='master'
          read -r key size unit _ ref _ <<< \
            "$(gh actions-cache list -B ${cache_ref} --key "${cache_key}-x86_64" | head -1)"

          if [[ "${key}" ]]; then
            echo "cacheHit=true" >> $GITHUB_OUTPUT
          else
            echo "cacheHit=false" >> $GITHUB_OUTPUT
          fi

          echo "cacheKey=${cache_key}" >> $GITHUB_OUTPUT
          echo "commitHash=$(git rev-parse --short=9 HEAD)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          set-safe-directory: ${{ github.workspace }}

      - name: Build Flatpak Manifest
        uses: flatpak/flatpak-github-actions/flatpak-builder@v6.1
        with:
          bundle: obs-studio-${{ steps.setup.outputs.commitHash }}.flatpak
          manifest-path: ${{ github.workspace }}/build-aux/com.obsproject.Studio.json
          cache: ${{ fromJSON(steps.setup.outputs.cacheHit) }}
          cache-key: ${{ steps.setup.outputs.cacheKey }}
          mirror-screenshots-url: https://dl.flathub.org/repo/screenshots
          branch: ${{ matrix.branch }}

      - name: Validate AppStream
        working-directory: ${{ env.FLATPAK_BUILD_PATH }}
        run: |
          : Validate AppStream
          appstream-util validate appdata/com.obsproject.Studio.appdata.xml

      - name: Verify Icon and Metadata in app-info
        working-directory: ${{ env.FLATPAK_BUILD_PATH }}
        run: |
          : Verify Icon and Metadata in app-info
          test -f app-info/icons/flatpak/128x128/com.obsproject.Studio.png || { echo "Missing 128x128 icon in app-info!"; exit 1; }
          test -f app-info/xmls/com.obsproject.Studio.xml.gz || { echo "Missing com.obsproject.Studio.xml.gz in app-info!"; exit 1; }

      - name: Commit Screenshots to OSTree Repository
        run: |
          : Commit Screenshots to OSTree Repository
          ostree commit --repo=repo --canonical-permissions --branch=screenshots/x86_64 flatpak_app/screenshots

  steam-upload:
    name: Upload Steam Builds 🚂
    needs: create-release
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/steam-upload
        with:
          steamSecret: ${{ secrets.STEAM_SHARED_SECRET }}
          steamUser: ${{ secrets.STEAM_USER }}
          steamPassword: ${{ secrets.STEAM_PASSWORD }}
          workflowSecret: ${{ github.token }}
          preview: true
